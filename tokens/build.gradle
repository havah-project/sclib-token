plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}


java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
    compileOnly 'foundation.icon:javaee-api:0.9.2'

    testImplementation 'foundation.icon:javaee-unittest:0.9.7'
    testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

compileJava {
    // need to add this option to retrieve formal parameter names
    options.compilerArgs += ['-parameters']
}

test {
    useJUnitPlatform()
}

task javadocJar(type: Jar) {
    classifier 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

def projectName = 'havah-tokens'
def repoUrl = 'https://github.com/havah-project/sclib-token'
def snapshotSuffix = rootProject.hasProperty('release') ? '' : '-SNAPSHOT'
version = VERSION + snapshotSuffix

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = GROUP
            artifactId = projectName
            version = VERSION
            from components.java
            pom {
                name = projectName
                description = 'A Java Smart Contract Library for HAVAH Standard Tokens'
                url = 'https://www.havah.io'
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'HAVAH'
                        name = 'HAVAH Team'
                        email = 'kn.kim@iconloop.com'
                    }
                }
                scm {
                    url = repoUrl
                }
            }
        }
    }
    repositories {
        maven {
            name = 'mavenCentral'
            def releasesUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsUrl : releasesUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
